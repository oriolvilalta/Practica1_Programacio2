public class NomClasse //extends {
    
    public int expandedSize(int[][] compressed) { //Sense grau com a constant
        return compressed[compressed.length - 1][0];
    }
    
    public int expandedSize(int[][] compressed) { //Amb grau com a constant
        return DEGREE;
    }
    
    public int compressedSize(int[] expanded) {
        int count;
        for(int i = 0; i < expanded.length; i++) {
            if(expanded[i] != 0) {
                count++;
            }
        }
        return count;
    }
    
    public int[] createExpanded(int expandedSize) {
        int[] expanded = new int[expandedSize];
        return expanded;
    }
    
    public int[][] createCompressed(int compressedSize) {
        int[][] compressed = new int[compressedSize][2];
        return compressedSize;
    }
    
    public void copyTo(int[] fromExpanded, int[][] toCompressed) {
        int j = 0;
        for(int i = 0; i < fromExpanded.length; i++) {
            if(fromExpanded[i] != 0) {
                toCompressed[j][0] = i;
                toCompressed[j][1] = fromExpanded[i];
                j++;
            }
        }
    }
    
    public void copyTo(int[][] fromCompressed, int[] toExpanded) {
        for(int i = 0; i < fromCompressed.length; i++) {
            toExpanded[fromCompressed[0][i]] = fromCopressed[1][i];
        }
    }
    
    public int[][] compress(int[] expanded) {
        int[][] compressed = createCompressed(compressedSize(expanded));
        for(int i = 0; i < expanded; i++) {
            //ACABAR
        }
    }
    
}
